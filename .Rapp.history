Sys.setenv(LANG="en_US.UTF-8")
a.
available.packages()
available.packages("abd")
available.packages(abc)
available.packages() head(rownames(a),3)
available.packages()
install.packages("slidify")
swirl()
library(swirl)
swirl()
my_div
t <- c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(1,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
getwd()
ls()
x <- 9
ls
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
help()
getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.file()
list.files()
file.exists("mytest.R")
file.info("mttest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive=true)
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
setwd(olddir)
setwd(old.dir)
swirl()
1:20
pi:10
15:1
swirl()
quit()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem),elem[2])
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
source("/Users/AngelaChi/Documents/Studying/Rcourse/ProgrammingAssignment2/cachematrix.R")
makeCacheMatrix(matrix(1:4,2,2))
my_matrix <- makeCacheMatrix(matrix(1:4,2,2))
my_matrix$get
source("/Users/AngelaChi/Documents/Studying/Rcourse/ProgrammingAssignment2/cachematrix.R")
a <- makeCacheMatrix(matrix(1:4,2,2))
b <- cacheSolve(a)
b
a
library(iris)
library(datasets)
data(iris)
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
head(mtcars)
split(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
with(mtcars,tapply(mpg,cyl,mean))
tapply(mtcars$hp,mtcars$cyl,mean)
debug(ls)
?ls
swirl()
library(swirl)
quit()
library(xlsx)
install.packages("rJava")
library(xlsx)
install.packages("xlsxjars")
library(xlsx)
sudo R CMD javareconf
install.packages("rJava",type='source')
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(rJava)
library(xlsxjars)
install.packages("rJava",type='source')
swirl()
library(swirl)
swirl()
qplot(displ,hwy,data=mpg,color=drv)
source("/Users/AngelaChi/Documents/Studying/Rcourse/RepData_PeerAssessment1/RepData_PeerAssessment1/Project 1.md")
install.packages("knitr")
install.packages("rmarkdown")
library(rmarkdown)
library(knitr)
source("/Users/AngelaChi/Documents/Studying/Rcourse/RepData_PeerAssessment1/RepData_PeerAssessment1/Project 1.Rmd")
source("/Users/AngelaChi/Documents/Studying/Rcourse/RepData_PeerAssessment1/RepData_PeerAssessment1/Project 1.md")
source("/Users/AngelaChi/Documents/Studying/Rcourse/RepData_PeerAssessment1/RepData_PeerAssessment1/Project1.Rmd")
source("/Users/AngelaChi/Documents/Studying/Rcourse/RepData_PeerAssessment1/RepData_PeerAssessment1/PA1_template.Rmd")
source("/Users/AngelaChi/Documents/Studying/Rcourse/RepData_PeerAssessment1/RepData_PeerAssessment1/1.Rmd")
knit("1.Rmd")
knit("1.Rmd")
knit2html("PA1_template.Rmd")
render("PA1_template.Rmd")
install.packages("pandoc")
